drop table if exists users cascade;
drop table if exists categories cascade;
drop table if exists requests cascade;
drop table if exists locations cascade;
drop table if exists events cascade;
drop table if exists compilations cascade;
drop table if exists event_compilations cascade;
drop table if exists comments cascade;

CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(100),
    email VARCHAR(100)
);
CREATE TABLE IF NOT EXISTS categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(250)
);

CREATE TABLE IF NOT EXISTS locations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat DECIMAL(8, 6) NOT NULL,
    lon DECIMAL(9, 6) NOT NULL
);

CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation         VARCHAR(3000),
    category_id        BIGINT       NOT NULL,
    description        varchar(5000),
    event_date         TIMESTAMP WITH TIME ZONE,
    location_id        BIGINT REFERENCES locations (id),
    paid               BOOLEAN DEFAULT FALSE,
    participant_limit  INTEGER,
    request_moderation BOOLEAN,
    title              VARCHAR(250) NOT NULL,
    confirmed_requests INTEGER,
    created_on         TIMESTAMP WITHOUT TIME ZONE,
    initiator_id       BIGINT REFERENCES users (id) ON DELETE RESTRICT,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    state              VARCHAR(50),
    views              BIGINT
);


CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created      TIMESTAMP NOT NULL,
    event_id     BIGINT REFERENCES events (id) ON DELETE RESTRICT,
    requester_id BIGINT REFERENCES users (id) ON DELETE RESTRICT,
    status       VARCHAR(50)
);


CREATE TABLE IF NOT EXISTS compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN DEFAULT FALSE,
    title  VARCHAR(250)
);

CREATE TABLE IF NOT EXISTS event_compilations
(
    id       BIGINT REFERENCES compilations (id) ON DELETE RESTRICT,
    event_id BIGINT REFERENCES events (id) ON DELETE RESTRICT,
    PRIMARY KEY (id, event_id)
);
CREATE TABLE IF NOT EXISTS comments (
                                        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                        comment_text VARCHAR(1000) NOT NULL,
                                        event_id BIGINT NOT NULL,
                                        author BIGINT NOT NULL,
                                        created_time TIMESTAMP NOT NULL,
                                        moderation_time TIMESTAMP,
                                        CONSTRAINT PK_COMMENT PRIMARY KEY (id),
                                        CONSTRAINT FK_COMMENTS_TO_EVENTS FOREIGN KEY (event_id) REFERENCES events(id),
                                        CONSTRAINT FK_COMMENTS_TO_USERS FOREIGN KEY (author) REFERENCES users(id)
);






